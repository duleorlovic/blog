---
layout: post
tags: ionic
---

# Start from blank

## Android SDK

Download [Android
SDK](http://developer.android.com/sdk/installing/index.html?pkg=tools) and
export path in your `.bashrc` like `export
ANDROID_HOME=/home/orlovic/Android/Sdk/`.

Make `android`, `adb` and `emulator` accessible with:

~~~
sudo ln -s /home/orlovic/Android/Sdk/platform-tools/adb /usr/bin/
echo 'export PATH="$PATH:$HOME/orlovic/Android/Sdk/tools"' >> ~/.bashrc
# or
sudo ln -s /home/orlovic/Android/Sdk/tools/android /usr/bin/
~~~

[Configure USB
access](http://source.android.com/source/initializing.html#configuring-usb-access) with this command:

`wget -S -O - http://source.android.com/source/51-android.rules | sed
"s/<username>/$USER/" | sudo tee >/dev/null /etc/udev/rules.d/51-android.rules;
sudo udevadm control --reload-rules`

~~~
lsusb # find your model
sudo vi /etc/udev/rules.d/51-android.rules
# add your model with idVendor and idProduct
sudo udevadm control --reload-rules
# plug again your device
# on device settings enable USB Debugging so `adb devices` show `device`
# on Android > 4.2.2 usb debuggins is hidden, so go Settings -> About Phone ->
# Build number than tap 5 times
# instead of `offline`
adb kill-server
adb devices
~~~

## Ionic

Download ionic and cordova with `npm install -g cordova ionic`

~~~
ionic start myIonic blank
cd myIonic
git init . && git add . && git commit -m "ionic start"
ionic setup sass
echo '# ionic upload
.io-config.json
# when using /scss css is autogenerated
www/css/
# bower packages
www/lib/
# cordova js is managed by ionic
hooks/
' >> .gitignore
git rm www/css -r
git add . && git commit -m "ionic setup sass"

ionic platform add android
cordova plugin add ionic-plugin-keyboard # this is default plugin
ionic plugin add cordova-plugin-camera
ionic state save
ionic upload
git add . && git commit -m "ionic add android && ionic upload"
ionic share some@email.com

ionic serve # to see it in browser
ionic emulate -lcs # to run in emulator with live reload and logs
ionic run --target 123123 # to run on device, find device name with adb devices
~~~

Some version of node have problem starting emulator, so you can start manually
`emulator @n4 &`

Generate
[icons](http://ionicframework.com/blog/automating-icons-and-splash-screens/)
# Installing Android ADB

Ionic drop support below [SDK
14](http://stackoverflow.com/questions/30203266/cordova-build-release-android-always-picks-the-highest-api-level)
so in your `config.xml` put

~~~
  <preference name="android-minSdkVersion" value="14"/>
~~~

# VirtualBox and Android Emulator

If you want to emulate and get this error

~~~
ioctl(KVM_CREATE_VM) failed: Device or resource busy
ko:failed to initialize KVM
~~~

it's because VirtualBox is running and using kvm. You can edit emulator
`tools/android --avd` to use some other than x86, for example `armeabi-v7a`. Then they can work in the same time `ionic serve --target myArmeabiDevice` [l](http://stackoverflow.com/questions/16168799/android-emulator-and-virtualbox-cannot-run-at-same-time).
But *Intel Atom (x86)* is much faster. Also enable *Emulation Options:* **Use
Host GPU**.

# Debug

You can see android device logs with grep (key with space does not work)

~~~
adb -d logcat | grep 'Web Console'
adb install -r platforms/android/build/outputs/apk/android-debug.apk
~~~

Angular [$log](https://docs.angularjs.org/api/ng/provider/$logProvider)
service `$log.debug(myObj);` can be used and disabled easilly in
app.config.js with `$logProvider.debugEnabled(false)` so only `$log.error()`
or `$log.info()` will be shown (don't know how to disable those two).

If you see `[object Object]` (probably old angular version) than you can use
`$log.debug(JSON.stringify(response.data));`

* Failure [INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES], Fix remove old
  application.


# Old browsers

Since old phones without Chromium suffer from pool javascript performance, maybe
[crosswalk](https://crosswalk-project.org/) could help.

# Notifications

I would rather user android toast instead of ngMessages.

~~~
cordova plugin add https://github.com/EddyVerbruggen/Toast-PhoneGap-Plugin.git
ionic state save
~~~

# Content security policy

[http://content-security-policy.com/](http://content-security-policy.com/)

~~~
<html>
  <head>
    <meta http-equiv="Content-Security-Policy" content="
    default-src * 'self' data: gap: https://ssl.gstatic.com;
    style-src 'self' 'unsafe-inline';
    script-src * 'unsafe-inline';
    media-src *;
    ">
  </head>
</html>
~~~

* ui-router can add `resolve: { auth: function($auth) { return
  $auth.validateUser() } }`, it will hang if user is not logged in. In ionic
  screens are nested states so it will be blank page. Better is to use
  completelly different state and resole auth on abstract tabs.
* ui-router for subpages should be on same level as page, since we render them
  on whole `<ion-nav-view>`
* [rack-cors](https://github.com/cyu/rack-cors) use all actions `[:get, :post,
  :delete, :put, :patch, :options, :head]`. I have strange error that all
  requests were *OPTIONS* instead of *POST*.

# Ready

For cordova plugins you should wait for ready and test if it exists.

~~~
  $ionicPlatform.ready(function() {
    if (window.cordova) {
      // window.plugins or window.cordova.plugins
    }
  })
~~~

# Auth

[ng-token-auth#validateUser](https://github.com/lynndylanhurley/ng-token-auth#authvalidateuser)
is called on page load so user does not need to log in again.

Token can be save to localStorage to work on device and emulator.
I've not succeed to have working auth in browser for ionic.

# if something is not working, wipe `node_modules` and run `npm install`

LocalStorage (or ng-token-auth) does not work with `emulator -l` livereload, so
don't use `-l`.

Do not check if user is valid with `angular.equals($scope.user, {})` in
controller since `validateUser` returns promise that will resolve after
controller has been initialized.
Better is to

~~~
// login.controller.js
  $auth.validateUser()
  .then(function() {
    $state.go('tab.dashboard');
  });
~~~

Or the best approach is to store all login state redirections in run

~~~

~~~
